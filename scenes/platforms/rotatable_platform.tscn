[gd_scene load_steps=4 format=2]

[ext_resource path="res://sfx/variable_volume.gd" type="Script" id=1]
[ext_resource path="res://sfx/614678__secondbody__friction-grinding-looped.wav" type="AudioStream" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends RigidBody2D

const DENSITY := 0.2

onready var _stream: AudioStreamPlayer2D = $AudioStreamPlayer2D
onready var _origin := position
onready var _variable_volume: VariableVolume = $VariableVolume


func build(start_origin: Vector2, end_origin: Vector2, thickness: int):
	PlatformTools.base_platformify(self, start_origin, end_origin, thickness)
	mass = start_origin.distance_to(end_origin) * DENSITY


func _integrate_forces(state):
	if mode == RigidBody2D.MODE_KINEMATIC:
		state.transform = state.transform.rotated(state.angular_velocity * state.step)
	else:
		state.transform.origin = _origin
		state.linear_velocity = Vector2.ZERO
	
	if abs(state.angular_velocity) < _variable_volume.min_stimuli_value:
		if _stream.playing:
			_stream.stop()
	elif _stream.playing:
		_stream.volume_db = _variable_volume.calculate_volume(abs(state.angular_velocity))
	else:
		_stream.play()


func prepare_for_advancement(_offset):
	call_deferred(\"set_mode\", RigidBody2D.MODE_KINEMATIC)
"

[node name="RigidBody2D" type="RigidBody2D"]
modulate = Color( 0.2, 0.2, 1, 1 )
collision_mask = 2
mass = 10.0
gravity_scale = 0.0
angular_damp = 1.0
script = SubResource( 1 )

[node name="VariableVolume" type="Node" parent="."]
script = ExtResource( 1 )
max_stimuli_value = 3.142
min_stimuli_value = 0.2
max_volume_db = 20.0
min_volume_db = 0.0

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 2 )
pitch_scale = 0.65
